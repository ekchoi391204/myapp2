name: CI

on:
  push:
    branches: [main]
    paths-ignore:
      - '.github/workflows/*'    

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Set safe image tag from commit message
        run: |
          RAW_MESSAGE=$(git log -1 --pretty=%B)
          SAFE_TAG=$(echo "$RAW_MESSAGE" | tr -s ' ' '-' | tr -dc '[:alnum:]-')
          echo "Commit message: $RAW_MESSAGE"
          echo "RELEASE_VERSION=$SAFE_TAG" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        run: |
          docker build -t public.ecr.aws/${{ secrets.PUBLIC_ECR_ALIAS }}/${{ secrets.PUBLIC_ECR_REPOSITORY }}:${{ env.RELEASE_VERSION }} .
          docker tag public.ecr.aws/${{ secrets.PUBLIC_ECR_ALIAS }}/${{ secrets.PUBLIC_ECR_REPOSITORY }}:${{ env.RELEASE_VERSION }} \
                     public.ecr.aws/${{ secrets.PUBLIC_ECR_ALIAS }}/${{ secrets.PUBLIC_ECR_REPOSITORY }}:latest

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1  # Public ECR는 무조건 us-east-1 사용

      - name: Login to Amazon Public ECR
        run: |
          aws ecr-public get-login-password --region us-east-1 | \
          docker login --username AWS --password-stdin public.ecr.aws

      - name: Push Docker image to Public ECR
        run: |
          docker push public.ecr.aws/${{ secrets.PUBLIC_ECR_ALIAS }}/${{ secrets.PUBLIC_ECR_REPOSITORY }}:${{ env.RELEASE_VERSION }}
          docker push public.ecr.aws/${{ secrets.PUBLIC_ECR_ALIAS }}/${{ secrets.PUBLIC_ECR_REPOSITORY }}:latest


### EKS 배포 ###

      - name: Update kubeconfig for EKS
        run: |
          aws eks update-kubeconfig \
            --region ${{ secrets.EKS_REGION }} \
            --name ${{ secrets.EKS_CLUSTER_NAME }}

      - name: Set image and deploy to EKS
        run: |
          kubectl set image deployment/${{ secrets.K8S_DEPLOYMENT_NAME }} \
            ${{ secrets.K8S_CONTAINER_NAME }}=public.ecr.aws/${{ secrets.PUBLIC_ECR_ALIAS }}/${{ secrets.PUBLIC_ECR_REPOSITORY }}:${{ env.RELEASE_VERSION }} \
            -n ${{ secrets.K8S_NAMESPACE }}
